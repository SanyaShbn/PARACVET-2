---
import type { GetStaticPaths } from "astro";
import { locales } from "../utils/i18n.config";

import Header from "../components/ui/Header.astro";
import Footer from "../components/ui/Footer.astro";
import SideMenu from "../components/ui/SideMenu.astro";
import { ViewTransitions } from "astro:transitions";

export const getStaticPaths = (() => {
  return locales.map((locale) => {
    return { params: { locale } };
  });
}) satisfies GetStaticPaths;

const locale = Astro.currentLocale;

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!-- Base пока будет layout-ом для Работ, Услуг, О компании и Методологии, для главной страницы - отдельный layout Main -->
<html lang={locale}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>

    <ViewTransitions />
  </head>
  <!-- <body class="bg-slate-200"> -->
  <body class="bg-white"> 

    <!-- <SideMenu /> -->

    <Header />

    <main class="grid grid-flow-row auto-rows-max grid-cols-10 gap-x-[6px] px-12">
      <slot />
    </main>

    <Footer />

    <script src="../scripts/global.js"></script>
    <style is:global>
      /* Tilewinds settings	 */
      @tailwind base;
      /* @tailwind components;
  @tailwind utilities; */

      @layer base {
        @font-face {
          font-family: "Manrope";
          font-style: normal;
          font-weight: 400;
          font-display: swap;
          src: url(../../public/fonts/Manrope/Manrope-Regular.ttf) format("woff2");
        }
        @font-face {
          font-family: "Manrope";
          font-style: bold;
          font-weight: 800;
          font-display: swap;
          src: url(../../public/fonts/Manrope/Manrope-Bold.ttf) format("woff2");
        }
        @font-face {
          font-family: "Manrope";
          font-style: medium;
          font-weight: 600;
          font-display: swap;
          src: url(../../public/fonts/Manrope/Manrope-Medium.ttf) format("woff2")
        }
        @font-face {
          font-family: "Golos Text";
          font-style: normal;
          font-weight: 400;
          font-display: swap;
          src: url(../../public/fonts/GolosText/regular.woff2) format("woff2");
        }
      }

      .font-golos {
        font-family: "Golos Text", sans-serif;
      }

      /* locomotive scroll */
      html.lenis {
        height: auto;
      }

      .lenis.lenis-smooth {
        scroll-behavior: auto;
      }

      .lenis.lenis-smooth [data-lenis-prevent] {
        overscroll-behavior: contain;
      }

      .lenis.lenis-stopped {
        overflow: hidden;
      }

      .lenis.lenis-scrolling iframe {
        pointer-events: none;
      }

      .wrapper {
        display: flex;
        justify-content: space-around;
        align-items: center;
        width: 100%;
        min-height: 100vh;
      }

      /* srolbar styling */
      body::-webkit-scrollbar {
        width: 0.3em;
      }
      body::-webkit-scrollbar {
        background-color: rgba(0, 0, 0, 0.1);
      }

      body::-webkit-scrollbar-track {
        box-shadow: inset 0 0 0px rgba(0, 0, 0, 0.1);
        /* background-color:  rgba(0, 0, 0, 0.2); */
      }

      body::-webkit-scrollbar-thumb {
        background-color: rgba(3, 3, 3, 0.7);
        outline: none;
        height: 5em;
      }
    </style>
  </body>
</html>
